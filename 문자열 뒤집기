<문제>
다솜이는 0과 1로만 이루어진 문자열 S를 가지고 있습니다. 다솜이는 이 문자열 S에 있는 모든 숫자를 전부 같게 만들려고 합니다. 
다솜이 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것입니다.
예를 들어 S = 0001100일 때는 다음과 같습니다.

1. 전체를 뒤집으면 1110011이 된다.
2. 4번째 문자무터 5번째 문자까지 뒤집으면 1111111이 되어서 두번만에 모두 같은 숫자로 만들 수 있다.

하지만, 처음부터 4, 5번째 문자를 뒤집었으면 한번에 0000000이 되어서 1번만에 모두 같은 숫자로 만들 수 있습니다.

첫째 줄에 0과 1로만 이루어진 문자열 S가 주어집니다. S의 길이는 100만보다 작습니다.
문자열 S가 주어졌을 때, 다솜이가 해야하는 행동의 최소 횟수를 출력하시오.




<풀이>
전부 0으로 바뀌는 경우와 전부 1로 바뀌는 경우 중에서 더 적은 횟수를 가지는 경우를 계산 해야한다.

s = input()

count0 = 0      # 전부 0으로 바꾸는 경우  # 1 -> 0으로 바꾸는 횟수
count1 = 0      # 전부 1로 바꾸는 경우    # 0 -> 1으로 바꾸는 횟수

# 첫 번째 원소에 대해서 처리
if s[0] == '1':
    count0 += 1
else:
    count1 += 1
    
    
# 두 번째 원소부터 모든 원소를 확인하며
for i in range(len(s) - 1):
    if s[i] != s[i + 1]:
        # 다음 수에서 1로 바뀌는 경우
        if s[i + 1] == '1':
            count0 += 1
        # 다음 수에서 0으로 바뀌는 경우
        else:
            count1 += 1

print(min(count0, count1))
